<UserControl x:Class="ProjectWerner.Face2Speech.Views.Keyboard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:ProjectWerner.Face2Speech.ViewModels"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             xmlns:converter="clr-namespace:ProjectWerner.Face2Speech.Converter"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>

        <Style x:Key="ItemsStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FFFDFD00"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFFDFD00"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FFFDFD00"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WordsStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FF3CFF10"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF3CFF10"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FF3CFF10"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <viewModels:MainViewModel x:Key="ViewModel" />
        <converter:IconConverter x:Key="IconConverter"/>
        <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsActive}" Value="true">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="DarkGreen" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" FillBehavior="Stop" Duration="0:0:1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsActive}" Value="true">
                    <Setter Property="Background" Value="Transparent" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="LineDataTemplate">
            <ListBox ItemsSource="{Binding Words}" 
        		ItemTemplate="{DynamicResource WordDataTemplate}"
        		ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
        		Background="Transparent"
        		BorderThickness="0"
        		ItemContainerStyle="{DynamicResource WordsStyle}"
        		SelectedIndex="{Binding SelectedWordIndex}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </DataTemplate>
        <DataTemplate x:Key="WordDataTemplate">
            <Button MinWidth="50" 
        		FontSize="38" 
        		Content="{Binding Text, Converter={StaticResource IconConverter}}"
        		Tag="{Binding .}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <ei:CallMethodAction TargetObject="{Binding Mode=OneWay, Source={StaticResource ViewModel}}" MethodName="OnButtonClicked"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </DataTemplate>
    </UserControl.Resources>
    <Grid DataContext="{StaticResource ViewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="35*"/>
            <ColumnDefinition Width="53*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="175*"/>
            <RowDefinition Height="59*"/>
            <RowDefinition Height="535*"/>
        </Grid.RowDefinitions>
        <TextBox x:Name="textBox"
			Margin="10,15,10,10" 
			TextWrapping="Wrap"
			FontSize="38"
			Text="{Binding DisplayText}" 
			TextChanged="OnTextChanged" 
			CaretBrush="Transparent" Grid.ColumnSpan="2" />
        <Canvas Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Border x:Name="Caret"
				Canvas.Left="0" 
				Canvas.Top="0"
				Margin="10,15,10,5" 
				Width="3" 
				Height="50" 
				Background="Blue">
                <Border.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard>
                            <Storyboard x:Name="CaretStoryBoard" 
								RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames 
									Storyboard.TargetProperty="Background.Color"
									Duration="0:0:0:1"
									FillBehavior="HoldEnd">
                                    <DiscreteColorKeyFrame KeyTime="0:0:0.750" Value="Transparent" />
                                    <DiscreteColorKeyFrame KeyTime="0:0:0.000" Value="Blue"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>
            </Border>
        </Canvas>
        <svgc:SvgViewbox Grid.Column="1" 
                         Grid.Row="1" 
                         Height="30" 
                         Stretch="Uniform" 
                         Source="Images/Mund_neutral_schwarz.svg" 
                         Visibility="{Binding MouthClosed, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <svgc:SvgViewbox Grid.Column="1" 
                         Grid.Row="1" 
                         Height="50" 
                         Stretch="Uniform" 
                         Source="Images/Mund_offen_schwarz.svg" 
                         Visibility="{Binding MouthOpen, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <ListBox Grid.Row="2"
                 Margin="10"
                 Grid.Column="0" 
                 ItemsSource="{Binding ProposalWords}"
                 Background="Transparent"
                 BorderThickness="0"
                 ItemContainerStyle="{DynamicResource WordsStyle}"
                 FontSize="32" 
                 SelectedIndex="{Binding SelectedProposalWordIndex}" 
                 SelectedValue="{Binding SelectedProposalWord}"
                 DisplayMemberPath="Text">
        </ListBox>
        <ListBox Margin="10" 
			Grid.Row="2"
            Grid.Column="1"
			ItemTemplate="{DynamicResource LineDataTemplate}"
			ItemsSource="{Binding KeyboardLines}" 
			HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
			HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
			ItemContainerStyle="{DynamicResource ItemsStyle}"
			SelectionMode="Multiple"
			SelectedIndex="{Binding SelectedKeyboardLineIndex}"
            BorderBrush="{x:Null}" />

        <Grid Grid.ColumnSpan="2"
              Grid.RowSpan="3"
              Background="#CCFF0000" 
              Visibility="{Binding LostFace, Converter={StaticResource BoolToVisibilityConverter}}">
            <StackPanel VerticalAlignment="Center">
                <Viewbox Width="256" Height="256">
                    <Grid>
                        <Grid Width="256" Height="256" Visibility="Collapsed" />
                        <Path Data="M27.598911,0.001254679C29.182207,-0.01484121 31.066509,0.1230506 33.307934,0.46575697 33.307934,0.465757 43.597275,-0.23026071 44.637249,7.2547601 44.637249,7.2547601 45.687172,10.474777 46.117138,12.912807 46.117138,12.912807 46.007156,18.42083 45.327206,21.215856 45.77713,20.839847 46.287109,20.844852 46.56712,22.263834 46.587078,22.369854 46.607098,22.48286 46.627113,22.602856 47.107063,25.787868 44.007282,27.573858 43.717262,26.957857 43.157299,28.745891 42.317383,30.846884 41.097427,32.768888L41.097427,37.201925 41.797398,37.318914 41.927395,40.748937 62.227161,49.930975 63.999996,54.490991 0,54.490991 1.7799185,49.930975 22.078587,40.748937 22.208584,37.318914 22.918623,37.201925 22.918623,33.602892C21.578619,32.111887 20.368732,30.194887 19.528818,27.688879 18.718811,27.732885 16.348963,26.180876 16.578928,23.404861 16.588938,23.282852 16.598947,23.167862 16.608955,23.061842 16.808895,21.521858 17.378927,21.589851 17.878897,22.012857 16.318935,18.029837 13.199133,8.1597632 19.488783,5.9487547 19.488783,5.9487542 17.92321,0.099617977 27.598911,0.001254679z" Stretch="Uniform" Fill="#FFFFFFFF" Width="256" Height="256" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </Viewbox>
                <TextBlock TextAlignment="Center"
                           FontSize="50"
                           Foreground="White">
                    Gesicht wird nicht erkannt.
                </TextBlock>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>

